name: devcontainer
services:
  lobe-dev:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - ..:/workspace:cached
      - node_modules_cache:/workspace/node_modules
      - next_cache:/workspace/.next
    working_dir: /workspace
    command: sleep infinity
    ports:
      - '3010:3010'
      - '3000:3000'
    depends_on:
      postgresql:
        condition: service_healthy
      minio:
        condition: service_started
      casdoor:
        condition: service_healthy
    env_file:
      - ../docker-compose/local/.env
    environment:
      # Core settings
      - NEXT_PUBLIC_SERVICE_MODE=server
      - NEXT_PUBLIC_ENABLE_NEXT_AUTH=1
      - DATABASE_DRIVER=node
      # Ensure dev server uses 3010 and avoid internal proxy rewrites
      - PORT=3010
      - MIDDLEWARE_REWRITE_THROUGH_LOCAL=0

      # Database (usa directamente la contraseña del .env)
      - DATABASE_URL=postgresql://postgres:uWNZugjBqixf8dxC@postgresql:5432/lobechat

      # App URLs
      - APP_URL=http://192.168.7.196:3010
      - NEXTAUTH_URL=http://192.168.7.196:3010/api/auth
      - AUTH_URL=http://192.168.7.196:3010/api/auth

      # Auth secrets
      - NEXT_AUTH_SECRET=NX2kaPE923dt6BL2U8e9oSre5RfoT7hg
      - NEXT_AUTH_SSO_PROVIDERS=casdoor
      - KEY_VAULTS_SECRET=Kix2wcUONd4CX51E/ZPAd36BqM4wzJgKjPtz2sGztqQ=

      # S3/MinIO (usa directamente las credenciales del .env)
      - S3_ENDPOINT=http://minio:9000
      - S3_PUBLIC_DOMAIN=http://192.168.7.196:9000
      - S3_ACCESS_KEY_ID=admin
      - S3_SECRET_ACCESS_KEY=lobechat123456
      - S3_BUCKET=lobe
      - S3_ENABLE_PATH_STYLE=1
      - S3_SET_ACL=0
      - LLM_VISION_IMAGE_USE_BASE64=1

      # Casdoor Auth (usa las credenciales de tu .env)
      - AUTH_CASDOOR_ISSUER=http://192.168.7.196:8001
      - AUTH_CASDOOR_ID=a387a4892ee19b1a2249
      - AUTH_CASDOOR_SECRET=dbf205949d704de81b0b5b3603174e23fbecc354

      # Search
      - SEARXNG_URL=http://searxng:8080
    networks:
      - lobe-network

  postgresql:
    image: pgvector/pgvector:pg17
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=lobechat
      - POSTGRES_PASSWORD=uWNZugjBqixf8dxC
    entrypoint: >
      /bin/bash -c "
        if [ -f /var/lib/postgresql/data/PG_VERSION ]; then
          echo '⚙️  Resetting postgres password...';
          docker-entrypoint.sh postgres &
          POSTGRES_PID=\$!;
          sleep 5;
          psql -U postgres -c \"ALTER USER postgres WITH PASSWORD 'uWNZugjBqixf8dxC';\" || true;
          wait \$POSTGRES_PID;
        else
          docker-entrypoint.sh postgres;
        fi
      "


    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - lobe-network

  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    restart: unless-stopped
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio_data:/data
      - ../docker-compose/minio-bucket.config.json:/tmp/bucket-policy.json
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=lobechat123456
      - MINIO_API_CORS_ALLOW_ORIGIN=*
    networks:
      - lobe-network
    entrypoint: >
      /bin/sh -c "
        minio server /data --console-address ':9001' &
        MINIO_PID=\$!
        while ! curl -s http://localhost:9000/minio/health/live; do
          echo 'Waiting for MinIO to start...'
          sleep 1
        done
        sleep 3
        mc alias set myminio http://localhost:9000 admin lobechat123456
        echo 'Creating bucket lobe'
        mc mb myminio/lobe --ignore-existing
        echo 'Setting bucket policy'
        mc anonymous set-json /tmp/bucket-policy.json myminio/lobe
        wait \$MINIO_PID
      "


  casdoor:
    image: casbin/casdoor:v2.13.0
    restart: unless-stopped
    ports:
      - '8001:8001'
    depends_on:
      postgresql:
        condition: service_healthy
    env_file:
      - ../docker-compose/local/.env
    environment:
      - httpport=8001
      - RUNNING_IN_DOCKER=true
      - driverName=postgres
      - dataSourceName=user=postgres password=uWNZugjBqixf8dxC host=postgresql port=5432 sslmode=disable dbname=casdoor
      - runmode=dev
      - origin=http://192.168.7.196:8001
    volumes:
      - ../docker-compose/local/init_data.json:/init_data.json
    networks:
      - lobe-network
    entrypoint: /bin/sh -c './server --createDatabase=true'
    healthcheck:
      test: ['CMD-SHELL', 'wget -q --spider http://localhost:8001 || exit 1']
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s

  searxng:
    image: searxng/searxng
    restart: unless-stopped
    ports:
      - '8080:8080'
    volumes:
      - ./searxng-settings.yml:/etc/searxng/settings.yml
    environment:
      - SEARXNG_SETTINGS_FILE=/etc/searxng/settings.yml
    networks:
      - lobe-network

volumes:
  postgres_data:
  minio_data:
  node_modules_cache:
  next_cache:

networks:
  lobe-network:
    driver: bridge
